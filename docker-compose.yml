version: '3.4'

services:
  postgres:
    image: postgis/postgis:15-3.3
    container_name: postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: emir
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  identity-server:
    build:
      context: .
      dockerfile: BankManagement/Host/IdentityServerHost/Dockerfile
    depends_on:
      - postgres
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    ports:
      - "5001:80"

  bank-management:
    build:
      context: .
      dockerfile: BankManagement/Host/BankManagement.HttpApi.Host/Dockerfile
    depends_on:
      - postgres
      - identity-server
      - redis
      - rabbitmq
    environment:
      ASPNETCORE_ENVIRONMENT: Testing
    ports:
      - "5000:80"

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_DEFAULT_VHOST=bank-management
    ports:
      - "5672:5672"   # RabbitMQ protocol
      - "15672:15672" # RabbitMQ UI

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.0
    container_name: kibana
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"

volumes:
  pgdata:
